name: create_user
on:
  push:
    branches:
    - main
    paths:
      - 'roles/add_user/files/users/**/id_rsa.pub'
  workflow_dispatch:
    inputs:
      userName:
        required: true
        type: string
      email:
        description: Chatwork will notify the user with this email address of the processing result.
        required: true
        type: string
      
permissions: 
      id-token: write
      pull-requests: write
      
jobs:
  createUser:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 2

      - name: Zip entire repository
        run: zip -r ${{ github.sha }}.zip ./ -x "*.git*"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::166313796795:role/test-gha

      - name: Put S3
        run: |
          export REPOSITORY=$(echo ${{ github.repository }} | sed -e "s#.*/##")
          aws s3 cp ${{ github.sha }}.zip s3://miyashita-ansible/$REPOSITORY/${{ github.ref_name }}/
          
      - name: Get username from input.
        if:  github.event_name == 'workflow_dispatch'
        env:
          USER: ${{ github.event.inputs.userName }}
        run: echo "USER=$USER" >> $GITHUB_ENV
      
      - name: Get username from push.
        if:  github.event_name == 'push'
        run: |
          USER=$(git diff ${{ github.event.before }}...${{ github.event.after }} --diff-filter=A --name-onlyh | cut -d'/' -f 5)
          echo "USER=$USER" >> $GITHUB_ENV
      
      - name: Create user with ansible via ssm.
        run: |            
          res=$(aws ssm send-command \
          --document-name "AWS-ApplyAnsiblePlaybooks" \
          --document-version "1" \
          --targets '[{"Key":"InstanceIds","Values":["i-050e7f95b5e8ecf89"]}]' \
          --parameters '{"SourceType":["S3"],"SourceInfo":["{\"path\": \"https://miyashita-ansible.s3.ap-northeast-1.amazonaws.com/ansible/main/${{ github.sha }}.zip\"}"],"InstallDependencies":["True"],"PlaybookFile":["playbooks/add_user.yml"],"ExtraVariables":["username='$USER'"],"Check":["False"],"Verbose":["-v"],"TimeoutSeconds":["3600"]}' \
          --timeout-seconds 600 \
          --max-concurrency "50" \
          --max-errors "0" \
          --region ap-northeast-1)
          
          echo $res
          INSTANCE_ID=$(echo $res | jq -r '.Command.Targets[0].Values[0]')
          COMMAND_ID=$(echo $res | jq -r '.Command.CommandId')
          STATUS=$(echo $res | jq -r '.Command.Status')
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "COMMAND_ID=$COMMAND_ID" >> $GITHUB_ENV
          echo "STATUS=$STATUS" >> $GITHUB_ENV
          
      - name: Check result status.
        run: |
          while [ $STATUS == "Pending" || $STATUS == "InProgress" ];
          do
            STATUS=$(aws ssm get-command-invocation --command-id $COMMAND_ID --instance-id $INSTANCE_ID | jq -r '.Status')
            sleep 10
          done
          
          echo "STATUS=$STATUS" >> $GITHUB_ENV
      
      - name: Get chatwork's mention from input.
        if: github.event_name == 'workflow_dispatch'
        run: |
          cw_mention=$(aws dynamodb get-item --table-name ex_gha_cw --key '{"email": {"S": "'${{ github.event.inputs.email }}'"}}')
          CW_ID=$(echo $cw_mention | jq -r '.Item.cw_id.N')
          CW_NAME=$(echo $cw_mention | jq -r '.Item.name.S')
          echo "CW_ID=$CW_ID" >> $GITHUB_ENV
          echo "CW_NAME=$CW_NAME" >> $GITHUB_ENV
        
      - name: Get chatwork's mention from push.
        if: github.event_name == 'push'
        run: |
          CW_MENTION=$(aws dynamodb get-item --table-name ex_gha_cw --key '{"email": {"S": "'${{ github.event.pusher.email }}'"}}')
          CW_ID=$(echo $cw_mention | jq -r '.Item.cw_id.N')
          CW_NAME=$(echo $cw_mention | jq -r '.Item.name.S')
          echo "CW_ID=$CW_ID" >> $GITHUB_ENV
          echo "CW_NAME=$CW_NAME" >> $GITHUB_ENV          
      
      - name: Notify to chatwork.
        run: |
          url="https://ap-northeast-1.console.aws.amazon.com/systems-manager/run-command/$COMMAND_ID?region=ap-northeast-1"
          
          if [ $STATUS != "Success" ]; then
            data="[To:$CW_ID] $CW_NAME\nユーザ作成に失敗しました。詳しくは、以下をご覧ください。\n$url"
          elif [ $STATUS == "Success" ]; then
            data="[To:$CW_ID] $CW_NAME\nユーザ作成に成功しました。詳しくは、以下をご覧ください。\n$url"
          fi
          
          curl -X POST -H "X-ChatWorkToken: ${{ secrets.CHATWORK_API_KEY }}" "https://api.chatwork.com/v2/rooms/171332204/messages" -d "body=$(echo $data)"
          

      
